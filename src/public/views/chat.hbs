<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ name }}</title>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

</head>
<body>
 <nav>
    <div class="nav-wrapper blue">
    <form method="get" action="/auth/logout">
         <input  type="submit" value="LogOut" class="btn red brand-logo right" style="margin-top: 15px; margin-right: 5%;">
     </form>
     
      <ul id="nav-mobile" class="center hide-on-med-and-down">
        <li><a href="/login"> Sign In </a></li>
        <li><a href="/register"> Sign Up </a></li>
        <li style="justify-content: center;"><img src="{{user.avatar}}" width="30px" style="margin-top: 15px; border-radius: 10px 50px / 60px;" alt=""></li>
        <li><span style="justify-content: center; margin-left: 10px; margin-bottom: 14px;">{{user.name}}</span></li>
      </ul>
    </div>
  </nav>

 <div id="chatWrapper">
<div id="chatBox" class="p-2" style="border: thick double #32a1ce; overflow-y: scroll; border-radius: 10px; height: 400px; margin-left:15%;margin-right:15%; margin-top: 50px">
 {{#each messages}}
           <div style="border-radius: 20px; background-color: rgba(7, 248, 236, 0.5); margin: 15px; padding: 10px;" class="msgBox">
          <strong id="">{{ name }}{{ ownerId.name }}</strong>: {{ text }}
        </div>
   {{/each}}
</div>
<div style="padding: 10px; border: thick double #5ece32; border-radius: 20px; height: 120px; margin-left:15%; margin-right:15%; margin-top: 20px">
<form id="messageInput" onsubmit="return sendMsg(event)" class="mt-4">
      <input style="weight: 80%; margin-left: 10px; margin-right:20px" type="text" placeholder="type your message here..." class="w-75" id="msgText" required>
      <button style="margin-left:44%" class="btn waves-effect waves-light" type="submit" name="action"> SEND</button>
</form> 
</div>
<div class="col-4 p-2 mb-2" style="height: 700px;" id="usersWrapper">
    <div style="visibility: hidden;" sclass="container d-flex justify-content-between flex-wrap" id="usersContainer">
      {{#each users }}
          <div class="avatar-container" id="{{ id }}">
            <div class="avatar-img">
              <img src="{{ avatar }}" style="border: 1px solid grey; border-radius: 50%">
            </div>
            <div class="avatar-name d-flex justify-content-center">{{ name }}</div>
          </div>
        {{/each}}
    </div>
</div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
  let socket = io.connect();

  socket.emit('setUserRoom', { roomId: getChatRoomId(), accessToken: getAccessToken() });

  socket.on('serverToClient', function(msg) {
    let chatBox = document.getElementById('chatBox');
    let msgDiv = document.createElement('div');
    msgDiv.style = "border-radius: 20px; background-color: rgba(7, 248, 236, 0.5); margin: 15px; padding: 10px;"
    msgDiv.innerText = msg.text;
    let userStrong = document.createElement('strong')
    userStrong.innerText = msg.name + ': ';
    msgDiv.insertBefore(userStrong, msgDiv.firstChild);
    chatBox.insertBefore(msgDiv, chatBox.firstChild);
  });

  socket.on('addUser', (data) => {
  
    addUser(data);
  })
  
  
  socket.on('disconnectUser', (userId) => {
    document.getElementById(userId).remove();
  })

  function addUser(data) {
      let avatarContainer = document.createElement('div');
      avatarContainer.classList.add('avatar-container');
      avatarContainer.id = data.userId;

      let avatarImg = document.createElement('div');
      avatarImg.classList.add('avatar-img');
      let img = document.createElement('img');
      img.setAttribute('src', 'https://picsum.photos/100/100');
      img.setAttribute('style', 'border: 1px solid grey;border-radius: 50%');

      let avatarName = document.createElement('div');
      avatarName.classList.add('avatar-name');
      avatarName.classList.add('d-flex');
      avatarName.classList.add('justify-content-center');
      avatarName.innerText = data.user;

      avatarImg.appendChild(img);
      avatarContainer.appendChild(avatarImg);
      avatarContainer.appendChild(avatarName);

      document.getElementById('usersContainer').appendChild(avatarContainer);

  }

  function sendMsg(e) {
    e.preventDefault();
    let msgText = document.getElementById('msgText').value;
    document.getElementById('msgText').value = '';
    socket.emit('clientToServer', { text: msgText, accessToken: getAccessToken(), roomId: getChatRoomId(), name: getUserName()}, );
  }
  
  
  function getChatRoomId() {
    let url = new URL(window.location.href);
    return url.pathname.split('/')[2];
  }

  function getAccessToken() {
    let separateCookies = document.cookie.split(';');
    let userPart = separateCookies.filter((i) => i.trim().slice(0, 11) === 'accessToken');
   console.log(userPart)
    return userPart[0].split('=')[1];
  }
function getUserName(){
   let separateCookies =  document.cookie.trim().split(';');
   let userPart = separateCookies.find((i) => i.trim().substring(0, 4)==="name");
    return userPart.split('=')[1];
  }
</script>
</body>
</html>